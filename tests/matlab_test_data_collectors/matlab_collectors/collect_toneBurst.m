params = { ...
    {40e6, 5e6, 4,  'Envelope','Gaussian'}, ...
    {80e6, 20e6, 2,'Envelope', 'Gaussian'}, ...
    {10e6, 0.5e6, 1, 'Envelope', 'Gaussian'}, ...
    {40e6, 5e6, 4, 'Envelope', 'Rectangular'}, ...
    {80e6, 20e6, 2, 'Envelope', 'Rectangular'}, ...
    {10e6, 0.5e6, 1, 'Envelope', 'Rectangular'}, ...
    {40e6, 5e6, 7, 'Envelope', [3, 2]}, ...
    {80e6, 20e6, 2, 'Envelope', 'Gaussian', 'SignalOffset', 200}, ...
    {10e6, 0.5e6, 200, 'Envelope', [40, 90], 'SignalLength', 8000} ...
    {10e6, 0.5e6, 200, 'Envelope', [40, 90], 'SignalLength', 8000, 'SignalOffset', 200}, ...
    {10e6, 0.5e6, 200, 'Envelope', [40, 90], 'SignalLength', 80, 'SignalOffset', 200} ...
}; 

output_file = 'collectedValues/tone_burst.mat';
recorder = utils.TestRecorder(output_file);
for param_idx = 1:length(params)
    
    input_signal = toneBurst(params{param_idx}{:});

    recorder.recordVariable('params', params{param_idx});
    recorder.recordVariable('input_signal', input_signal);
    recorder.increment();

end
recorder.saveRecordsToDisk();
disp('Done.')
